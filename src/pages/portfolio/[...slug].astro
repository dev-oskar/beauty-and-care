---
import { type CollectionEntry, getCollection, render } from "astro:content";
import { type InferGetStaticPropsType } from "astro";

// layout
import PortfolioLayout from "@layouts/PortfolioLayout.astro";
import BaseLayout from "@layouts/BaseLayout.astro";

export async function getStaticPaths() {
	// Try to get all portfolio entries
	let portfolios = [];
	try {
		portfolios = await getCollection("portfolios", ({ data }) => {
			return data.draft !== true;
		});
	} catch (error) {
		console.error("Error fetching portfolios:", error);
	}
	
	// If we found portfolios, create paths for each one
	if (portfolios.length > 0) {
		return portfolios.map((portfolio) => ({
			params: { slug: portfolio.id },
			props: { portfolio, isFound: true }
		}));
	}
	
	// If we couldn't find any portfolios, return a default path
	return [
		{
			params: { slug: "default" },
			props: { isFound: false }
		}
	];
}

const { portfolio, isFound } = Astro.props;

// Only try to render content if we found a portfolio
let Content;
if (isFound) {
	const rendered = await render(portfolio);
	Content = rendered.Content;
}
---

{isFound ? (
	<PortfolioLayout portfolio={portfolio}>
		<Content />
	</PortfolioLayout>
) : (
	<BaseLayout title="Portfolio" description="No portfolios found">
		<div class="site-container pt-24 md:pt-36">
			<div class="mx-auto max-w-6xl text-center">
				<h1 class="h2 text-pretty uppercase">Portfolio</h1>
				<p class="mt-8">No portfolio entries found. Please check back later.</p>
			</div>
		</div>
	</BaseLayout>
)}