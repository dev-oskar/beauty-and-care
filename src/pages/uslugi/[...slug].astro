---
import { getCollection, getEntry } from "astro:content";
import { Image } from "astro:assets";

// layout
import PortfolioLayout from "@layouts/PortfolioLayout.astro";
import Button from "@components/Button/Button.astro";

// utils
import { formatDateShort, formatDateLong } from "@js/textUtils";

export async function getStaticPaths() {
	const portfolioEntries = await getCollection("portfolios");
	return portfolioEntries.map((entry) => ({
		params: { slug: entry.id },
		props: { entry },
	}));
}

// Get the entry directly from the prop on render
const { entry } = Astro.props;
const { Content } = await entry.render();

// get related portfolios based on location
const portfolios = await getCollection("portfolios", ({ data, id }) => {
	return id !== entry.id;
});

const numRelatedToShow = 3;
const relatedPortfolios = portfolios.slice(0, numRelatedToShow);

---

<PortfolioLayout
	title={entry.data.title}
	description={entry.data.description}
	heroImage={entry.data.heroImage}
	pageId={entry.id}
>
	<div class="mx-auto max-w-4xl pb-8 md:pb-12">
		<h1 class="h2 text-center text-pretty uppercase">{entry.data.title}</h1>
		<p class="text-primary-500 md:text-primary-600 mt-4 text-center font-semibold uppercase">{entry.data.description}</p>

		<div class="mt-4 flex flex-wrap justify-center gap-4">
			<p class="text-lg">
				<span class="font-bold">Data wprowadzenia:</span>
				{formatDateLong(entry.data.date)}
			</p>
			<p class="text-lg">
				<span class="font-bold">Salon:</span>
				{entry.data.location}
			</p>
		</div>

		<div class="prose prose-sm sm:prose md:prose-lg mx-auto mt-10 max-w-4xl">
			<Content />
		</div>

		<hr class="mt-12 border-[1.5px]" />

		<!-- Grid of staggered portfolio images -->
		{
			entry.data.images.map((row: any, rowIndex: number) => (
				<div class="grid-gallery mt-12">
					<div
						class:list={[
							"grid gap-4",
							{
								"sm:grid-cols-2": row.length === 2,
								"sm:grid-cols-3": row.length === 3,
								"sm:grid-cols-1": row.length === 1,
							},
						]}
					>
						{row.map((image: any, colIndex: number) => (
							<Image
								src={image}
								alt={`${entry.data.title} image ${rowIndex}-${colIndex}`}
								width={1000}
								class="h-auto w-full rounded-sm object-cover"
							/>
						))}
					</div>
				</div>
			))
		}

		<hr class="mt-12 mb-12 border-[1.5px]" />

		<div class="my-4 flex justify-between">
			<Button variant="ghost" arrow="left" href="/uslugi" class="pl-0">
				Wróć do zabiegów
			</Button>
		</div>
	</div>

	<section id="related-portfolios" class="mx-auto max-w-6xl px-4 pb-12">
		<h2 class="h2 text-center text-pretty uppercase">Inne zabiegi</h2>
		<div class="grid gap-12 pt-8 md:grid-cols-3 md:pt-12">
			{
				relatedPortfolios.map((portfolio) => (
					<a href={`/uslugi/${portfolio.id}`} class="block group">
						<div>
							<div class="aspect-square w-full overflow-hidden">
								<Image
									src={portfolio.data.heroImage}
									alt={portfolio.data.title}
									width={400}
									densities={[1.5, 2]}
									class="h-full w-full object-cover transition-transform duration-300 group-hover:scale-105"
								/>
							</div>
						</div>
						<div class="mt-6">
							<h3 class="h3 tracking-widest">{portfolio.data.title}</h3>
							<p class="text-primary-500 mt-2 text-sm font-semibold uppercase tracking-wide">
								{formatDateShort(portfolio.data.date)}
							</p>
						</div>
					</a>
				))
			}
		</div>
	</section>

	<div class="mx-auto max-w-5xl">
		<hr class="border-base-300 mb-12 border-t" />
	</div>
</PortfolioLayout>