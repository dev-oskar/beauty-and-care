---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import BaseLayout from "@layouts/BaseLayout.astro";
import RichTextContent from "@components/RichTextContent/RichTextContent.astro";

import { formatDate } from "../../utils/dateUtils";
import { resolveImage } from "@utils/imageResolver";

export async function getStaticPaths() {
	const procedures = await getCollection("zabiegi"); // Assuming your collection is named "procedures"
	return procedures.map((procedure) => ({
		params: { slug: procedure.slug },
		props: { procedure: procedure },
	}));
}

const { procedure } = Astro.props;
const featuredImage = procedure.data.featuredImage
	? resolveImage(procedure.data.featuredImage)
	: null;
---

<BaseLayout
	title={procedure.data.title}
	description={procedure.data.description}
	seoTitle={procedure.data.seoTitle}
	seoDescription={procedure.data.seoDescription}
	canonicalUrl={procedure.data.canonicalUrl}
	noindex={procedure.data.noindex}
	keywords={procedure.data.keywords}
	tags={procedure.data.tags}
>
	<div class="site-container pt-24 md:pt-36">
		<article class="mx-auto max-w-4xl pb-12">
			<!-- Title -->
			<h1 class="h2 text-center text-pretty">{procedure.data.title}</h1>

			<!-- Featured Image -->
			{
				featuredImage && (
					<div class="mt-8 mb-6 overflow-hidden rounded-lg shadow-md">
						<Image
							src={featuredImage}
							alt={procedure.data.title}
							width={800}
							height={450}
							class="h-auto max-h-[250px] w-full object-cover sm:max-h-[300px] md:max-h-[400px]"
						/>
					</div>
				)
			}

			<!-- Service Info Cards -->
			<div class="mt-6 flex flex-wrap justify-center gap-4">
				{
					procedure.data.priceRange && (
						<div class="bg-primary-50 rounded-lg px-4 py-2 shadow-sm">
							<span class="text-primary-800 font-semibold">Cena: {procedure.data.priceRange}</span>
						</div>
					)
				}

				{
					procedure.data.date && (
						<div class="bg-primary-50 rounded-lg px-4 py-2 shadow-sm">
							<span class="text-sm text-gray-600">
								Aktualizacja: {formatDate(procedure.data.date)}
							</span>
						</div>
					)
				}
			</div>

			<!-- Tags -->
			{
				procedure.data.tags && procedure.data.tags.length > 0 && (
					<div class="mt-6 flex justify-center">
						<div class="flex flex-wrap justify-center gap-2">
							{procedure.data.tags.map((tag) => (
								<span class="rounded-full bg-gray-100 px-2 py-1 text-xs text-gray-700">#{tag}</span>
							))}
						</div>
					</div>
				)
			}

			<!-- Target Clients -->
			{
				procedure.data.clients && procedure.data.clients.length > 0 && (
					<div class="mt-8 rounded-lg bg-gray-50 p-6">
						<h2 class="mb-4 text-center text-xl font-semibold">Dla kogo jest ten zabieg?</h2>
						<ul class="grid gap-2 md:grid-cols-2">
							{procedure.data.clients.map((client) => (
								<li class="flex items-center">
									<span class="text-primary-500 mr-2 text-lg">âœ“</span>
									<span>{client}</span>
								</li>
							))}
						</ul>
					</div>
				)
			}

			<!-- Main Content -->
			<RichTextContent content={procedure} />

			<!-- Navigation -->
			<div class="mt-12 flex justify-center">
				<a
					href="/zabiegi"
					class="text-primary-600 hover:text-primary-700 inline-flex items-center font-medium transition-colors"
				>
					<svg
						class="mr-1 h-5 w-5 rotate-180"
						fill="none"
						stroke="currentColor"
						viewBox="0 0 24 24"
					>
						<path
							stroke-linecap="round"
							stroke-linejoin="round"
							stroke-width="2"
							d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
					</svg>
					Wszystkie zabiegi
				</a>
			</div>
		</article>
	</div>
</BaseLayout>
