---
import { Image, getImage } from "astro:assets";

interface Props {
	image: {
		src: string;
		caption?: string;
		alt?: string;
		galleryTitle?: string;
		galleryDescription?: string;
	};
	index: number;
}

const { image, index } = Astro.props;
const imageCaption = image.caption || image.galleryTitle || "";
const imageAlt = image.alt || imageCaption || "Gallery image";

// Function to normalize image path and handle different formats
const normalizeImagePath = (src: string) => {
	// Handle both relative and absolute paths
	let normalizedPath = src;

	// If it starts with /assets/images/, adjust the path
	if (src.startsWith("/assets/images/")) {
		normalizedPath = `/public${src}`;
	}
	// If it doesn't include a path, assume it's in the images directory
	else if (!src.includes("/")) {
		normalizedPath = `/public/assets/images/${src}`;
	}

	return normalizedPath;
};
---

<div
	class="gallery-item overflow-hidden rounded-lg shadow-md transition-all duration-300 hover:shadow-lg"
	data-index={index}
>
	<div class="group relative aspect-square cursor-pointer overflow-hidden">
		<Image
			src={normalizeImagePath(image.src)}
			width={600}
			height={600}
			alt={imageAlt}
			loading={index >= 2 ? "lazy" : "eager"}
			class="h-full w-full object-cover transition-transform duration-500 group-hover:scale-110"
		/>
		<div
			class="absolute inset-0 flex items-center justify-center bg-black opacity-0 transition-all duration-300 group-hover:opacity-30"
		>
			<div
				class="translate-y-10 transform opacity-0 transition-all duration-300 group-hover:translate-y-0 group-hover:opacity-100"
			>
				<span
					class="flex h-12 w-12 items-center justify-center rounded-full bg-gray-800 text-white"
				>
					<svg
						xmlns="http://www.w3.org/2000/svg"
						class="h-6 w-6"
						fill="none"
						viewBox="0 0 24 24"
						stroke="currentColor"
					>
						<path
							stroke-linecap="round"
							stroke-linejoin="round"
							stroke-width="2"
							d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
					</svg>
				</span>
			</div>
		</div>
	</div>
	{
		imageCaption && (
			<div class="bg-white p-4">
				<p class="line-clamp-2 font-medium text-gray-800">{imageCaption}</p>
			</div>
		)
	}
</div>
